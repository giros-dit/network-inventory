version: '3.9'
services:
  ceos1:
    image: "ceos-image:4.25.4M"
    hostname: ceos1
    container_name: ceos1
    ports:
      - "6030"
      - "830"
    command: /sbin/init  systemd.setenv=INTFTYPE=eth systemd.setenv=ETBA=1 systemd.setenv=SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 systemd.setenv=CEOS=1 systemd.setenv=EOS_PLATFORM=ceoslab systemd.setenv=container=docker
    privileged: true
    environment:
      INTFTYPE: eth
      ETBA: 1
      SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT: 1
      CEOS: 1
      EOS_PLATFORM: ceoslab
      container: docker
    networks:
      default:
        ipv4_address: 172.16.238.11
      net1:
      net2:
  ceos2:
    image: "ceos-image:4.25.4M"
    hostname: ceos2
    container_name: ceos2
    ports:
      - "6030"
    command: /sbin/init  systemd.setenv=INTFTYPE=eth systemd.setenv=ETBA=1 systemd.setenv=SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 systemd.setenv=CEOS=1 systemd.setenv=EOS_PLATFORM=ceoslab systemd.setenv=container=docker
    privileged: true
    environment:
      INTFTYPE: eth
      ETBA: 1
      SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT: 1
      CEOS: 1
      EOS_PLATFORM: ceoslab
      container: docker
    networks:
      default:
        ipv4_address: 172.16.238.12
      net1:
      net2:
  context-catalog:
    image: halverneus/static-file-server
    hostname: context-catalog
    container_name: context-catalog
    ports:
      - "8080"
    volumes:
      - ./context-catalog:/web
  eureka:
    image: scorpiobroker/scorpio:eureka-server_2.1.1
    hostname: eureka
    container_name: eureka
    ports:
      - "8761"
  gateway:
    image: scorpiobroker/scorpio:gateway_aaio_2.1.1
    hostname: gateway
    container_name: gateway
    ports:
      - "9090:9090"
    depends_on:
      - eureka
  kafka:
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      ALLOW_PLAINTEXT_LISTENER: "yes"
    image: bitnami/kafka
    hostname: kafka
    ports:
      - "9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: none
  platform-registry:
    build:
      context: ./platform-registry
      dockerfile: Dockerfile
    container_name: platform-registry
    environment:
      - BROKER_URI=${BROKER_URI}
      - CONTEXT_CATALOG_URI=${CONTEXT_CATALOG_URI}
    hostname: platform-registry
    ports:
      - "8090:8080"
    volumes:
      - ./platform-registry/platform_registry:/opt/inventory/platform-registry/platform_registry
  postgres:
    image: postgis/postgis
    hostname: postgres
    container_name: postgres
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    logging:
      driver: none
    volumes:
      - scorpio-postgres-storage:/var/lib/postgresql/data
  scorpio:
    image: scorpiobroker/scorpio:scorpio-aaio_2.1.1
    hostname: scorpio
    container_name: scorpio
    ports:
      - "27015"
    depends_on:
      - gateway
      - eureka
      - postgres
      - kafka
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
  net1:
  net2:

volumes:
  scorpio-postgres-storage:
